package com.egov.secrecysystem.dao;

import java.util.List;
import java.util.Map;

import org.hibernate.Query;
import org.hibernate.Session;

import com.egov.secrecysystem.model.SeAnswerRecordDanXuan;
import com.egov.secrecysystem.model.SeUser;


public class AnswerRecordDanXuanDao  extends AbstractHibernateDao<SeAnswerRecordDanXuan> {

	AnswerRecordDanXuanDao(){
		super(SeAnswerRecordDanXuan.class);
	}
	
	public Session getSession() {
		return this.getCurrentSession();
	}
	// 统计单选题题目的错误率,考虑全部题目、一级保密题目等信息
	// problemlevel = 000 表示全部题目
	public List<Map> getAnswerRateShow(String whereString,
			Map<String, Object> valuesMap, int pageNum, int pageSize, String problemlevel, String type, String nameLike) {
		String hql = "select new map(t.id as id, t.seProblemDanXuan.problemlevel as problemlevel, t.seProblemDanXuan.mustright as mustright, t.seProblemDanXuan.keyproblem as keyproblem,"
				+ "t.seProblemDanXuan.question as question, t.seProblemDanXuan.option1 as option1, t.seProblemDanXuan.option2 as option2, t.seProblemDanXuan.option3 as option3, t.seProblemDanXuan.option4 as option4,"
				+ "t.seProblemDanXuan.answer as answer,t.seProblemDanXuan.problemnum as problemnum,count(t) as count ,sum(t.isright) as sum) from com.egov.secrecysystem.model.SeAnswerRecordDanXuan t ";
		hql += whereString;
		// 如果不是查询全部信息，则需要设置具体等级
		if(! "000".equals(problemlevel)) {
			hql += " and t.seProblemDanXuan.problemlevel =:problemlevel";
		}
		// 查询条件不为空
		if(!"".equals(nameLike)) {
			hql += " and t.seProblemDanXuan.question like :question";
		}
		// type代表查询题目类型
		if("1".equals(type)) {
			System.out.println("必对题目");
			hql += " and t.seProblemDanXuan.mustright = '1' ";
		} else if("2".equals(type)) {
			System.out.println("关键题目");
			hql += " and t.seProblemDanXuan.keyproblem = '1' ";
		}
		hql += " group by t.seProblemDanXuan.id ";
		
		System.out.println("测试 : 等级= " + problemlevel + "类型 =" + type + "题目=" + nameLike);
		System.out.println("测试 : 分页= " + pageNum + "大小 =" + pageSize);
		Query query = this.getCurrentSession().createQuery(hql)
				.setFirstResult(pageNum).setMaxResults(pageSize);
		String[] perchs = valuesMap.keySet().toArray(new String[0]);

		for (int i = 0; i < perchs.length; i++) {
			if (perchs[i].equals("score")) {
				query.setParameter(perchs[i],
						Integer.parseInt((String) valuesMap.get(perchs[i])));
			} else {
				query.setParameter(perchs[i], valuesMap.get(perchs[i]));
			}
		}
		if(! "000".equals(problemlevel)) {
			query.setParameter("problemlevel", problemlevel);
		}
		if(! "".equals(nameLike)) {
			query.setString("question", "%" + nameLike + "%");
		}
		return query.list();
	}
	// 题目数量
	public long getAnswerTotalCount(String whereString,
			Map<String, Object> valuesMap, String problemlevel, String type, String nameLike) {
		String hql = "select t from com.egov.secrecysystem.model.SeAnswerRecordDanXuan t ";
		hql += whereString;
		// 查询具体等级题目错误率信息
		if(! "000".equals(problemlevel)) {
			hql += " and t.seProblemDanXuan.problemlevel =:problemlevel";
		}
		if("1".equals(type)) {
			hql += " and t.seProblemDanXuan.mustright = '1' ";
		} else if ("2".equals(type)) {
			hql += " and t.seProblemDanXuan.keyproblem = '1' ";
		}
		// 查询条件不为空
		if(!"".equals(nameLike)) {
			hql += " and t.seProblemDanXuan.question like :question";
		}
		hql += " and t is not null group by t.seProblemDanXuan.id";
		Query query = this.getCurrentSession().createQuery(hql);
		String[] perchs = valuesMap.keySet().toArray(new String[0]);
		for (int i = 0; i < perchs.length; i++) {
			query.setParameter(perchs[i], valuesMap.get(perchs[i]));
		}
		if(! "000".equals(problemlevel)) {
			query.setParameter("problemlevel", problemlevel);
		}
		if(! "".equals(nameLike)) {
			query.setString("question", "%" + nameLike + "%");
		}
		return query.list().size();
	}
	
	
	
	/**
	 * @author yangfan
	 * @param loginName
	 * @param paperNum
	 * @return 
	 * @return
	 */
	public List caculateDanXuanScoreByPerson(String loginName,String paperNum){
		String hql = "select count(*) as danxuanScore from com.egov.secrecysystem.model.SeAnswerRecordDanXuan t "
				+ "where t.seUser.loginname = :loginName and t.papernum = :paperNum and t.isright = :isright";
		hql += " and t is not null";
		Query query = this.getCurrentSession().createQuery(hql);
		query.setParameter("loginName",loginName);
		query.setParameter("paperNum",Integer.parseInt(paperNum));
		query.setParameter("isright",1);
		return query.list();
	}
	
	/**
	 * @author yangfan
	 * @param loginName
	 * @param paperNum
	 * @return
	 */
	public List caculateDuoXuanScoreByPerson(String loginName,String paperNum){
		String hql = "select count(*) as duoxuanScore from com.egov.secrecysystem.model.SeAnswerRecordDuoXuan t "
				+ "where t.seUser.loginname = :loginName and t.papernum = :paperNum and t.isright = :isright";
		hql += " and t is not null";
		Query query = this.getCurrentSession().createQuery(hql);
		query.setParameter("loginName",loginName);
		query.setParameter("paperNum",Integer.parseInt(paperNum));
		query.setParameter("isright",1);
		return query.list();
	}
	/**
	 * @author yangfan
	 * @param loginName
	 * @param paperNum
	 * @return
	 */
	public List caculatePanduanScoreByPerson(String loginName,String paperNum){
		String hql = "select count(*) as panduanScore from com.egov.secrecysystem.model.SeAnswerRecordPanDuan t "
				+ "where t.seUser.loginname = :loginName and t.papernum = :paperNum and t.isright = :isright";
		hql += " and t is not null";
		Query query = this.getCurrentSession().createQuery(hql);
		query.setParameter("loginName",loginName);
		query.setParameter("paperNum",Integer.parseInt(paperNum));
		query.setParameter("isright",1);
		return query.list();
	}
	/**
	 * 取出所有答错的单选
	 * @param seUser
	 * @param paperNum
	 * @return
	 */
	public List findDanxuanRecordByUserAndPaperNum(SeUser seUser,String paperNum){
		String hql = "select t from com.egov.secrecysystem.model.SeAnswerRecordDanXuan t "
				+ "where t.seUser = :seUser and t.papernum = :paperNum and t.isright = :isright";
		hql += " and t is not null";
		Query query = this.getCurrentSession().createQuery(hql);
		query.setParameter("seUser",seUser);
		query.setParameter("paperNum",Integer.parseInt(paperNum));
		query.setParameter("isright",0);
		return query.list();
	}
	
	/**
	 * 取出所有答错的多选
	 * @param seUser
	 * @param paperNum
	 * @return
	 */
	public List findDuoxuanRecordByUserAndPaperNum(SeUser seUser,String paperNum){
		String hql = "select t from com.egov.secrecysystem.model.SeAnswerRecordDuoXuan t "
				+ "where t.seUser = :seUser and t.papernum = :paperNum and t.isright = :isright";
		hql += " and t is not null";
		Query query = this.getCurrentSession().createQuery(hql);
		query.setParameter("seUser",seUser);
		query.setParameter("paperNum",Integer.parseInt(paperNum));
		query.setParameter("isright",0);
		return query.list();
	}
	
	/**
	 * 取出所有答错的判断
	 * @param seUser
	 * @param paperNum
	 * @return
	 */
	public List findPanduanRecordByUserAndPaperNum(SeUser seUser,String paperNum){
		String hql = "select t from com.egov.secrecysystem.model.SeAnswerRecordPanDuan t "
				+ "where t.seUser = :seUser and t.papernum = :paperNum and t.isright = :isright";
		hql += " and t is not null";
		Query query = this.getCurrentSession().createQuery(hql);
		query.setParameter("seUser",seUser);
		query.setParameter("paperNum",Integer.parseInt(paperNum));
		query.setParameter("isright",0);
		return query.list();
	}
}
