var comboLanguageStore = new Ext.data.JsonStore({
			fields:[
			        'languagenum',
			        'languagename'
			        ]
		});

function renderRed(value) {
	return "<span style='color:red;font-weight:bold;'>" + value + "</span>";
}

function renderGreen(value) {
	return "<span style='color:green;font-weight:bold;'>" + value + "</span>";
}

// 获取部门信息
var comboDepartStore = new Ext.data.JsonStore({
	fields:[
	        'remark'
	        ]
});

var comnoPaperNumStore = new Ext.data.JsonStore({
	fields:[
	        'papernum',
	        'starttime'
	        ]
}); 

   var form = new Ext.form.FormPanel({
	   title:"选择统计条件",
	   region:"north",
	   frame:true,
	   width:300,
	   height:65,			  
	   labelAlign:'right',
	   items:[{
		 layout:'column',
		 items:[{
			  columnWidth:.3,	
			  layout:'form',	
			  labelWidth:90,
			  items:[{
	        	     xtype:'combo',
	        	     // id:"papernum",
	        	     fieldLabel:'选择查询部门',
	        	     hiddenName:'remark',
	        	     triggerAction:'all',
	        	     store:comboDepartStore,
	        	     displayField:'remark',
	        	     valueField:'remark',			        	  
	        	     mode:'local',
	        	     anchor:'97.5%',
	        	     editable:false,
	        	     allowBlank: false,
	        	     emptyText:'---请选择---'		        	     
	        	    }] 
	          },{
	        	  columnWidth:.2,	
	        	  layout:'form',
	        	  labelWidth:70,
				  items:[{
					  xtype:'numberfield',
					  id:'passLine',
					  fieldLabel:'设置及格线',
	        	      name:'passLine',
	        	      allowNegative:false,
	        	      anchor:'97.5%',
	        	      value:'60',
	        	      allowBlank: false
				  }]
			      
		          },{
		        	  columnWidth:.2,	
		        	  layout:'form',
		        	  labelWidth:70,
					  items:[{
						  xtype:'numberfield',
						  id:'excellentLine',
						  fieldLabel:'设置优秀线',
		        	      name:'excellentLine',
		        	      allowNegative:false,
		        	      anchor:'97.5%',
		        	      value:'85',
		        	      allowBlank: false				        	      
					  }]			      
			          },{
			        	  columnWidth:.1,	
			        	  layout:'form',
			        	  items:[{
							  xtype:'button',
							  text:'查询统计',
							  anchor:'97.5%',
							   handler : function() {
						        	if(form.getForm().isValid()){
							         	var summaryCondition = form.getForm().getValues();
							         	ScoreRecordController.summaryScoreByYear(summaryCondition,function(data){ 
							     	    	if(data){
							     	    		scoreSummaryStore.loadData(data);
							     	    	}else
							     	    		Ext.MessageBox.alert('提示',"统计失败！");
							     	    	
							     	    });
						        	
						        	}else{
						        		Ext.MessageBox.alert('提示',"输入统计条件有误！");
						        	}
						         }
						   }]
					     }
		           ]				 
		   }]			   		   
   });
   
	   
	   var scoreSummaryFields= Ext.data.Record.create([{
			name : 'starttime'
		}, {
			name : 'papernum'
		},{
			name : 'unpassusercount'
		}, {
			name : 'passusercount'
		},{
			name : 'passuserpercent'
		}, {
			name : 'excellentusercount'
		},{
			name : 'excellentuserpercent'
		},{
			name : 'usercount'
		}]);
	   
		   
		   var scoreSummaryStore = new Ext.data.JsonStore({
				fields : scoreSummaryFields
				});
		  
		   var scoreSummarygrid = new Ext.grid.GridPanel({
				region : 'center',
				id : 'scoreSummarygrid',
				store : scoreSummaryStore,
				title : '历年成绩统计表',
				loadMask : true,
				stripeRows : true,
				autoScroll : true,
//				autoExpandColumn : 'collegename',
				viewConfig : {
					sortDescText : '降序',
					sortAscText : '升序',
					columnsText : '显示列',
					forceFit : false
				},
				columns : [new Ext.grid.RowNumberer(), {
							id : 'starttime',
							header : '考试时间',
							dataIndex : 'starttime',
							width : 200,
							sortable : true
						}, {
							id : 'papernum',
							header : '次数',
							dataIndex : 'papernum',
							width : 150,
							sortable : true
						}, {
							header : '不及格人数',
							dataIndex : 'unpassusercount',
							width : 120,
							sortable : true
						} ,{
							header : '及格人数',
							dataIndex : 'passusercount',
							width : 120,
							sortable : true
						},{
							header : '及格率',
							dataIndex : 'passuserpercent',
							width : 120,
							sortable : true,
							renderer : renderRed
						}, {
							header : '优秀人数',
							dataIndex : 'excellentusercount',
							width : 120,
							sortable : true
						},{
							header : '优秀率',
							dataIndex : 'excellentuserpercent',
							width : 120,
							sortable : true,
							renderer : renderGreen
						},{
							header : '本部门总人数',
							dataIndex : 'usercount',
							width : 120,
							sortable : true
						}],
						tbar : [{
			     	        text: '导出本部门历年成绩统计表',
			   	        iconCls : 'upload-icon',
			   	        scope : this,
			   				handler : function() {
			   					exportYXCJTJBXls(); 
			   				}			
			   			}] 
			});
		   // 获取部门信息
		   function WindowInit(){
			   UserController.getDepartList(function(data){
					if(data){
						comboDepartStore.loadData(data);
					}
			  	});
		   }
		   
		   
	function ScoreSummaryInfoPageInit(){
			   
			 //初始化界面
				 new Ext.Viewport({
						layout:'border',
						hideMode : Ext.isIE ? 'offsets' : 'display',
						items:[form, scoreSummarygrid],
						renderTo : Ext.getBody()
					});
				 
				 WindowInit();
		   }
	
	
	function exportYXCJTJBXls(){
		if(form.getForm().isValid()){
			var con_language=Ext.get('language').dom.value;//注意：使用Ext.get('hiddenValue').dom.value获取的才是combobox中需要提交的value的值
			var con_passLine=Ext.get('passLine').dom.value;
			var con_excellentLine= Ext.get('excellentLine').dom.value;
			
			
			StudentController.SetSessionParameter(con_language,con_passLine,con_excellentLine,function(data){
				if(data){
					var f = document.getElementById('exportYXCJTJBExcel');
					f.action = '../exportYXCJTJBExcel.do';
					f.submit({
						failure : function(form,action){
							var error = Ext.util.JSON.decode(action.response.responseText).error;
							Ext.MessageBox.alert('导出失败',"原因：" + error);
						}
						
					});
				}
		  	});     			
	}else{
		Ext.MessageBox.alert('提示',"请您先统计完成绩！");
	}
	}